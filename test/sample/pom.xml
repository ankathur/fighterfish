<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.glassfish.fighterfish</groupId>
	<artifactId>test.sample</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>Sample to show use of PAX-EXAM/Maven/JUnit in GlassFish to test enterprise OSGi applications</name>
	<dependencies>
		<dependency>
			<!-- Add this dependency if test cases leverage a small utility bundle 
				developed in GlassFish FighterFish project to help users write test cases 
				using pax-exam with even more less effort. -->
			<groupId>org.glassfish.fighterfish</groupId>
			<artifactId>test.util</artifactId>
			<version>1.1.0-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
                <dependency>
                        <groupId>org.apache.felix</groupId>
                        <artifactId>org.apache.felix.framework</artifactId>
                        <version>3.0.8</version>
                </dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>ToolsJar</id>
			<activation>
				<os>
					<family>!mac</family>
				</os>
			</activation>
			<dependencies>
				<!-- Add tools.jar to classpath as required by GlassFish's monitoring 
					code. -->
				<dependency>
					<groupId>com.sun</groupId>
					<artifactId>tools</artifactId>
					<version>1.6.0</version>
					<scope>system</scope>
					<systemPath>${java.home}/../lib/tools.jar</systemPath>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
	<build>
		<plugins>
			<plugin>
				<!-- We need to configure the JVM that's going to be used to run the 
					test. Since surefire forks a new JVM, we have to set the properties here. -->
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<systemProperties>
						<property>
							<!-- Our test framework expects GlassFish installation location to 
								be specified via a system property called com.sun.aas.installRoot. Based 
								on this property, it knows where to locate other glassfish bundles. -->
							<name>com.sun.aas.installRoot</name>
							<value>${glassfish.home}</value>
						</property>
						<property>
							<!-- This is where we configure timeout value for pax-exam framework -->
							<name>pax-exam.timeout</name>
							<value>100000</value>
						</property>
					</systemProperties>
					<!-- Maven chooses to make provided dependencies part of test classpath. 
						The javaee-api and javaee-web-api jars can't be used in runtime, for they 
						don't contain proper classes, so we exclude them from test classpath. -->
					<classpathDependencyExcludes>
						<classpathDependencyExcludes>javax:javaee-web-api
						</classpathDependencyExcludes>
					</classpathDependencyExcludes>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<properties>
		<!-- Set this wherever you have installed glassfish. Note the value must 
			be glassfish dir found inside glassfish3 -->
		<glassfish.home>/space/ss141213/WS/gf/v3/publish/glassfish3/glassfish</glassfish.home>
	</properties>
</project>
